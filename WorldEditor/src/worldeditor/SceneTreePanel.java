package worldeditor;

import com.jme.scene.Node;
import com.jme.scene.Spatial;
import javax.swing.JFrame;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;


public class SceneTreePanel extends javax.swing.JPanel {
    private TreeModel treeModel;
    private InspectableGame game;

    public SceneTreePanel() {
        this(null);
    }

    /** Creates new form SceneTreePanel */
    public SceneTreePanel(InspectableGame game) {
        this.game = game;
        loadTreeModel();
        initComponents();
    }

    protected void loadTreeModel() {
        TreeNode tree = null;

        if (game == null || game.getRootNode() == null) {
            tree = new DefaultMutableTreeNode("EMPTY");
        } else {
            tree = buildTree(game.getRootNode());
        }

        setTreeModel(new DefaultTreeModel(tree));
    }

    private DefaultMutableTreeNode buildTree(Node parent) {
        DefaultMutableTreeNode parentNode = new DefaultMutableTreeNode(parent);

        for (Spatial spatial : parent.getChildren()) {
            DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(spatial);
            parentNode.add(childNode);


            if (spatial instanceof Node) {
                parentNode.add(new DefaultMutableTreeNode(childNode));
                buildTree((Node)spatial);
            } else {
                DefaultMutableTreeNode childTranslationNode = new DefaultMutableTreeNode("Translation: " + spatial.getLocalTranslation());
                DefaultMutableTreeNode childRotationNode = new DefaultMutableTreeNode("Rotation: " + spatial.getLocalRotation());
                DefaultMutableTreeNode childScaleNode = new DefaultMutableTreeNode("Scale: " + spatial.getLocalScale());
                DefaultMutableTreeNode triangleCountNode = new DefaultMutableTreeNode("Triangles: " + spatial.getTriangleCount());

                childNode.add(childTranslationNode);
                childNode.add(childRotationNode);
                childNode.add(childScaleNode);
                childNode.add(triangleCountNode);
            }
        }

        return parentNode;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sceneTreeScrollPane = new javax.swing.JScrollPane();
        sceneTree = new javax.swing.JTree();

        sceneTree.setModel(getTreeModel());
        sceneTreeScrollPane.setViewportView(sceneTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sceneTreeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sceneTreeScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree sceneTree;
    private javax.swing.JScrollPane sceneTreeScrollPane;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the treeModel
     */
    public TreeModel getTreeModel() {
        return treeModel;
    }

    /**
     * @param treeModel the treeModel to set
     */
    private void setTreeModel(TreeModel treeModel) {
        if (sceneTree != null) {
            this.treeModel = treeModel;
            sceneTree.setModel(treeModel);
        }
    }

    public static void main(String[] args) {
        JFrame testFrame = new JFrame("Test Scene Tree Panel");
        testFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        testFrame.getContentPane().add(new SceneTreePanel(null));
        testFrame.pack();
        testFrame.setVisible(true);
    }

}
